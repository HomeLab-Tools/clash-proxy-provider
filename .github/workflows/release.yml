on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  CARGO_TERM_COLOR: always

name: Create Release
jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
             ${{ github.event.message }}
          draft: false
          prerelease: false
      - name: Save upload_url
        run: echo ${{ steps.create_release.outputs.upload_url }} > upload_url
      - uses: actions/upload-artifact@v2
        with:
          name: upload_url
          path: upload_url
  build:
    needs: create_release
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [x86_64-unknown-linux-gnu]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: Build
        run: cargo build --bins --release --target ${{ matrix.target }}
      - name: Download upload_url
        uses: actions/download-artifact@v2
        with:
          name: upload_url
      - name: Setup upload_url
        id: setup_output_url
        shell: bash
        run: |
          url=`cat upload_url`
          echo "::set-output name=upload_url::$url"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.setup_output_url.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: target/${{ matrix.target }}/release/clash-proxy-provider
          asset_name: clash-proxy-provider_${{ matrix.target }}
          asset_content_type: application/octet-stream
